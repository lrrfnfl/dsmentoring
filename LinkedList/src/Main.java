
/**
 * The type Main.
 */
public class Main {

    /**
     * The entry point of application.
     *
     * @param args the input arguments
     */
    public static void main(String[] args) {
        /**
         *  리스트의 추가, 삭제, 검색, 출력, 사용자입력 메소드 모두
         *  LinkedList 클래스에 선언 및 구현을 하였습니다.
         */
        LinkedList linkedList = new LinkedList(); // LinkedList 클래스의 함수들을 사용하기위해 linkedList 객체 생성

        linkedList.Input();
    }
}




/*
 LinkedList 클래스에서 구현한 각각의 메소드들은 모두 Debug 모드를 통해 테스트 하였습니다.
 Debug 모드와 수작업으로 테스트한 결과 에러없이 잘 구동됩니다.
 */

/**
 *          리스트의 인덱스는 1(처음)부터 시작합니다.
 */
/*                        번호를 입력하세요.
 *          1.노드추가  2.노드삭제  3.노드검색  4.리스트출력  5.프로그램종료
 *          1       // 노드추가(Add 함수) 선택
 *          1 a     // 추가할 인덱스와 저장할 데이터값 입력
 *
 *
 *                          번호를 입력하세요.
 *          1.노드추가  2.노드삭제  3.노드검색  4.리스트출력  5.프로그램종료
 *          4       // 리스트 출력
 *          [ a]    // 위에서 추가한 1개의 리스트를 출력
 *
-------------------------------------------------------------------------------
 *
                            번호를 입력하세요.
            1.노드추가  2.노드삭제  3.노드검색  4.리스트출력  5.프로그램종료
            4
            [ 1]  [ 2]  [ 3]  [ 4]    // 현재 리스트에 4개의 노드가 있을때

                            번호를 입력하세요.
            1.노드추가  2.노드삭제  3.노드검색  4.리스트출력  5.프로그램종료
            2       // 노드삭제(Delete 함수) 선택
            2       // 2번째 노드를 삭제

                            번호를 입력하세요.
            1.노드추가  2.노드삭제  3.노드검색  4.리스트출력  5.프로그램종료
            4
            [ 1]  [ 3]  [ 4]        // [1] [2] [3] [4] 중 2번째인 [2] 노드가 삭제됨

            .
            .
            .
            .
            .
 */
